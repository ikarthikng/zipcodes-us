// src/scripts/process-data.ts
import fs from "fs"
import path from "path"
import { fileURLToPath } from "url"
import { parseLine, toZipCodeInfo } from "../loader.js"

// Get current file directory (needed for ES modules)
const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

// Define paths
const sourceDataPath = path.join(__dirname, "..", "..", "data", "US.txt")
const outputPath = path.join(__dirname, "..", "..", "data", "zip-data.js")

/**
 * Process the data file and generate a JavaScript module
 */
async function processData() {
  console.log("Processing ZIP code data file...")

  try {
    // Check if the source file exists
    if (!fs.existsSync(sourceDataPath)) {
      console.error(`Source data file not found: ${sourceDataPath}`)
      process.exit(1)
    }

    // Read the raw data file
    const fileContent = fs.readFileSync(sourceDataPath, "utf8")
    const lines = fileContent.split("\n")

    console.log(`Read ${lines.length} lines from data file`)

    // Process the data
    const processedData = []

    for (const line of lines) {
      if (!line.trim()) continue

      const rawData = parseLine(line)
      if (!rawData) continue

      // Only include US ZIP codes
      if (rawData.countryCode !== "US") continue

      processedData.push(toZipCodeInfo(rawData))
    }

    console.log(`Processed ${processedData.length} ZIP codes`)

    // Write the processed data as a JavaScript module
    const jsContent = `/**
 * Auto-generated ZIP code data file
 * DO NOT EDIT MANUALLY - Generated by process-data.ts
 */
export default ${JSON.stringify(processedData)};
`

    fs.writeFileSync(outputPath, jsContent, "utf8")
    console.log(`Successfully wrote processed data to: ${outputPath}`)
  } catch (error) {
    console.error("Error processing ZIP code data:", error)
    process.exit(1)
  }
}

// Run the script
processData()
